<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pattern matching on Green Mojito in technology</title>
    <link>https://ldipotetjob.github.io/mojitoverde/tags/pattern-matching/</link>
    <description>Recent content in pattern matching on Green Mojito in technology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Scadip</copyright>
    <lastBuildDate>Fri, 20 Sep 2019 09:00:00 +0000</lastBuildDate><atom:link href="https://ldipotetjob.github.io/mojitoverde/tags/pattern-matching/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pattern Matching - I</title>
      <link>https://ldipotetjob.github.io/mojitoverde/posts/2019-09-20-pattermatching-i/</link>
      <pubDate>Fri, 20 Sep 2019 09:00:00 +0000</pubDate>
      
      <guid>https://ldipotetjob.github.io/mojitoverde/posts/2019-09-20-pattermatching-i/</guid>
      <description>Pattern matching specification
This post covers the following patern matching specifications:
 Pattern Sequences. Infix Operation Patterns. Pattern Alternatives. Irrefutable Patterns.  For previuos kinds of Pattern matching specifications review this link
 Pattern Sequences:
 SimplePattern ::= StableId ‘(’ [Patterns ‘,’] [varid ‘@’] ‘_’ ‘*’ ‘)’
 1val testList:List[Int] = List(1,1) 2 3testList match { 4 case List(1, _*) =&amp;gt; s&amp;#34;hello $testList&amp;#34; 5 case _ =&amp;gt; &amp;#34; nothing match&amp;#34; 6} 7 8// res23: String = hello List(1, 1) 9 10val testListbinding:List[Int] = List(1,1) 11 12testList match { 13 case testList@List(1, _*) =&amp;gt; &amp;#34;a list beginning with 1, binding&amp;#34; 14 case _ =&amp;gt; &amp;#34; nothing match binding&amp;#34; 15} 16 17// testListbinding: List[Int] = List(1, 1) 18// res24: String = a list beginning with 1, binding 19 20testList match { 21 case x @ List(1, _*) =&amp;gt; s&amp;#34;$x&amp;#34; 22 case _ =&amp;gt; &amp;#34; nothing match binding&amp;#34; 23} 24 25// res25: String = List(1, 1) Infix Operation Patterns:</description>
    </item>
    
    <item>
      <title>Pattern Matching</title>
      <link>https://ldipotetjob.github.io/mojitoverde/posts/2019-07-20-pattermatching/</link>
      <pubDate>Sat, 20 Jul 2019 09:00:00 +0000</pubDate>
      
      <guid>https://ldipotetjob.github.io/mojitoverde/posts/2019-07-20-pattermatching/</guid>
      <description>Some examples of patterns are:
 The pattern ex: IOException matches all instances of class IOException, binding variable ex to the instance. The pattern Some(x) matches values of the form Some(v), binding x to the argument value v of the Some constructor. The pattern (x, _) matches pairs of values, binding x to the first component of the pair. The second component is matched with a wildcard pattern. The pattern x :: y :: xs matches lists of length ≥2, binding x to the list&amp;rsquo;s first element, y to the list&amp;rsquo;s second element, and xs to the remainder.</description>
    </item>
    
  </channel>
</rss>
