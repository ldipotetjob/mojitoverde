<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>akka on Green Mojito in technology</title>
    <link>https://ldipotetjob.github.io/mojitoverde/tags/akka/</link>
    <description>Recent content in akka on Green Mojito in technology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Scadip</copyright>
    <lastBuildDate>Sun, 10 Mar 2019 09:00:00 +0000</lastBuildDate><atom:link href="https://ldipotetjob.github.io/mojitoverde/tags/akka/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Akka an intelligent solution for concurrency</title>
      <link>https://ldipotetjob.github.io/mojitoverde/posts/2019-03-10-akkaconcurrencysolution/</link>
      <pubDate>Sun, 10 Mar 2019 09:00:00 +0000</pubDate>
      
      <guid>https://ldipotetjob.github.io/mojitoverde/posts/2019-03-10-akkaconcurrencysolution/</guid>
      <description>We have a concurrency problem: I need to process and parse hundreds of thousands of websites asynchronously. I tried many options with something in mind always: Futures. By coding in that manner, I produce something akin to the following:
1//.................... 2 3//game_1: Int value indicating first game 4 5//game_n: Int value indicating game n 6 7val resultMatch:List[Future[List[Match]]] = (game_1 until game_n).map { 8 matchnum =&amp;gt; 9 Future{ 10 new ParserFootbalHTML(&amp;#34;https://www.anyurl.com/...&amp;#34; + matchnum).</description>
    </item>
    
    <item>
      <title>Scheduling in Akka with Quartz - a wise solution</title>
      <link>https://ldipotetjob.github.io/mojitoverde/posts/2018-09-24-scalaakkaquartz/</link>
      <pubDate>Mon, 24 Sep 2018 09:00:00 +0000</pubDate>
      
      <guid>https://ldipotetjob.github.io/mojitoverde/posts/2018-09-24-scalaakkaquartz/</guid>
      <description>The problem I bring: how to execute several tasks following a specific schedule (day/time) for the long term and different patterns? The previous schedule must be able to vary in time.
Our scenario:
 A process like Linux cron services for running commands following a predetermined schedule. Objects that process configuration files that contain a list of command lines. The config file, which you can configure dynamically, contains the schedule of command invocation.</description>
    </item>
    
  </channel>
</rss>
